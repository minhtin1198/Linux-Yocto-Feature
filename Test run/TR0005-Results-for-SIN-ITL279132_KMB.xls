<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
  <head>
    <style>
      table.data{
        border-collapse: collapse;
        width: 100%;
      }
      table.sub-data{
        border-collapse: collapse;
        border: none;
      }
      table.sub-data th, table.sub-data td{
        border-color: white;
      }
      h1,h2,h3,h4,h5,h6,p,td,th{
        font-family: Arial, Helvetica, sans-serif;
      }
      th,td{
        text-align: left;
        vertical-align: top;
        border: 1px solid black;
        padding: 3px;
      }

      h2,h1{
        font-size: 14px;
        color: black;
      }
      h3{
        color: rgb(204,24,0);
        font-size: 21px;
      }

      h4{
        font-size: 18px;
        color: rgb(0,0,0);
      }

      h5{
        font-size: 16px;
        color: rgb(102,102,102);
      }

      h6{
        font-size: 14px;
        color: rgb(0,0,0);
        font-style: italic;
      }

      h6.h1{
        color: rgb(128,128,128);
      }

      h6.h2{
        color: rgb(0,0,0);
        font-style: normal;
        text-decoration: underline;
      }

      h6.h3{
        color: rgb(128,128,128);
        font-style: normal;
      }

      h6.h4{
        color: rgb(0,0,0);
        text-decoration: underline;
      }
      .form-id{
        white-space: nowrap;
      }
      .field-value{
        margin-left: 1em;
      }
      .field-value td{
        padding: 0px 2px 0px 0px;
      }

      .positive{
        color: rgb(0,128,64) !important;
      }
      .block-positive{
      }

      .neutral{
        color: rgb(128,128,128) !important;
      }
      .block-neutral{
      }

      .negative{
        color: rgb(204,0,0) !important;
      }
      .block-negative{
      }

      .highlight{
        color: rgb(0,0,0) !important;
        background-color: rgb(240,204,204) !important;
      }
      .block-highlight{
      }
      .nr{
      }
      .block-nr{
      }
      @page Section1{
        size:11.0in 8.5in;
        mso-page-orientation:landscape;
        margin:1.25in 1.0in 1.25in 1.0in;
        mso-header-margin:.5in;
        mso-footer-margin:.5in;
        mso-paper-source:0;
      }
      div.Section1{
        page:Section1;
      }
    </style>
            <xml xmlns:x="urn:schemas-microsoft-com:office:excel"
            xmlns:o="urn:schemas-microsoft-com:office:office">
          <x:ExcelWorkbook>
            <x:ExcelWorksheets>
              <x:ExcelWorksheet>
<!--            <x:Name>Sheet1</x:Name> -->
                <x:WorksheetOptions>
                  <x:Selected/>
                </x:WorksheetOptions>
              </x:ExcelWorksheet>
            </x:ExcelWorksheets>
          </x:ExcelWorkbook>
        </xml>
      </head>
  <body>
        <!-- Stats -->
    <div class="Section1">
    <table class="data">
      <thead>
        <tr>
          <th>Stats</th>
          <th colspan="2" class="stat-type">Test Case</th>
                        <th class="spacer"> </th>
              <th colspan="2" class="stat-type">Test Step</th>
          </tr>
      </thead>
      <tbody>            <tr>
              <th class="positive">Pass</th>
              <td class="stat-number">46</td>
              <td class="stat-number">100%</td>
                                <td class="spacer"> </td>
                  <td class="stat-number">236</td>
                  <td class="stat-number">100%</td></tr>            <tr>
              <th class="negative">Fail</th>
              <td class="stat-number">0</td>
              <td class="stat-number">0%</td>
                                <td class="spacer"> </td>
                  <td class="stat-number">0</td>
                  <td class="stat-number">0%</td></tr>            <tr>
              <th class="neutral">N/A</th>
              <td class="stat-number">0</td>
              <td class="stat-number">0%</td>
                                <td class="spacer"> </td>
                  <td class="stat-number">0</td>
                  <td class="stat-number">0%</td></tr>        <tr>
          <th class="nr">No Result</th>
          <td class="stat-number">0</td>
          <td class="stat-number">0%</td>
                        <td class="spacer"> </td>
              <td class="stat-number">0</td>
              <td class="stat-number">0%</td></tr><tr>
                <th class="ip">In Progress</th>
                <td class="stat-number">0</td>
                <td class="stat-number">0%</td>
                <td>&nbsp;</td>
                <td colspan="2">&nbsp;</td>
              </tr>          <tr>
            <th class="stat-total">Total</th>
            <td class="stat-total stat-number">46</td>
            <td> </td>
                            <td class="spacer">&nbsp;</td>
                <td class="stat-total stat-number">236</td>
                <td>&nbsp;</td>
            </tr>
      </tbody>
    </table>
    <br/>
    <br/>
    <table class="data">
      <thead>
        <tr>
          <th colspan="5">Results Summary</th>
        </tr>
        <tr>
          <th>Result</th>
          <th>Form ID</th>
          <th>Summary</th>
          <th>Resulted By</th>
          <th>Resulted On</th>
        </tr>
      </thead>
      <tbody>
                <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.1</td>
                    <td >iot_c_utility</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:52 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.2</td>
                    <td >socketio_connect</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:52 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.3</td>
                    <td >tlsio_connect</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:53 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.4</td>
                    <td >Azure-iot-sdk-c</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:53 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.5</td>
                    <td >iothub_convenience_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:53 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.6</td>
                    <td >iothub_ll_client_x509_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:54 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.7</td>
                    <td >iothub_client_device_twin_and_methods_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:54 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.8</td>
                    <td >iothub_client_sample_upload_to_blob</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:54 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.9</td>
                    <td >iothub_ll_c2d_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:54 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.10</td>
                    <td >iothub_ll_telemetry_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:54 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.11</td>
                    <td >iothub_client_sample_amqp_shared_methods</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:54 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.12</td>
                    <td >iothub_client_sample_upload_to_blob_mb</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:55 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.13</td>
                    <td >iothub_ll_client_shared_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:56 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.14</td>
                    <td >iothub_deviceconfiguration_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:56 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.15</td>
                    <td >iothub_devicemethod_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:56 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.16</td>
                    <td >iothub_devicetwin_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:56 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.17</td>
                    <td >iothub_messaging_ll_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:03 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.18</td>
                    <td >iothub_messaging_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:03 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.19</td>
                    <td >iothub_registrymanager_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:03 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.20</td>
                    <td >eh_sender_with_sas_token_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:02 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.21</td>
                    <td >local_client_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:02 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.22</td>
                    <td >message_receiver_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:02 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.23</td>
                    <td >message_sender_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:02 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.24</td>
                    <td >mssbcbs_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:02 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.25</td>
                    <td >websockets_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:02 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.1.26</td>
                    <td >mqtt_client_sample</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:02 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.2.1</td>
                    <td >Docker Testing</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:02 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.3.1</td>
                    <td >General Output Feature</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:01 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.3.2</td>
                    <td >General Input Feature</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:01 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.3.3</td>
                    <td >General Interrupt Handler Feature</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:01 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.4</td>
                    <td >RTC</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:01 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.5</td>
                    <td >Audio playback</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:01 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.6</td>
                    <td >Audio record</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:01 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.7.1</td>
                    <td >Camera port 1</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:01 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.7.2</td>
                    <td >Camera port 2</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:00 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.7.3</td>
                    <td >Camera port 3</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:00 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.7.4</td>
                    <td >Camera port 4</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:59 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.8</td>
                    <td >Ethernet port 1 - SOC ethernet</td>
          <td >Khai Do</td>
          <td >2020-05-13 04:00 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.9</td>
                    <td >HDMI Flash Firmware Tool</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:58 AM UTC</td>
        </tr>
            <tr>
          <td class="positiveclass="deletedForm"">
           Pass</td>
          <td class="form-id class="deletedForm"">
          TC 1.10.1</td>
                    <td class="deletedForm">SATA interface port 1</td>
          <td class="deletedForm">Khai Do</td>
          <td class="deletedForm">2020-05-13 03:58 AM UTC</td>
        </tr>
            <tr>
          <td class="positiveclass="deletedForm"">
           Pass</td>
          <td class="form-id class="deletedForm"">
          TC 1.10.1</td>
                    <td class="deletedForm">SATA interface port 2</td>
          <td class="deletedForm">Khai Do</td>
          <td class="deletedForm">2020-05-13 03:58 AM UTC</td>
        </tr>
            <tr>
          <td class="positiveclass="deletedForm"">
           Pass</td>
          <td class="form-id class="deletedForm"">
          TC 1.10.3</td>
                    <td class="deletedForm">SATA interface port 3</td>
          <td class="deletedForm">Khai Do</td>
          <td class="deletedForm">2020-05-13 03:58 AM UTC</td>
        </tr>
            <tr>
          <td class="positiveclass="deletedForm"">
           Pass</td>
          <td class="form-id class="deletedForm"">
          TC 1.10.3</td>
                    <td class="deletedForm">SATA interface port 4</td>
          <td class="deletedForm">Khai Do</td>
          <td class="deletedForm">2020-05-13 03:57 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.12</td>
                    <td >Ethernet port 2 - PCIe ethernet</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:57 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.13.1</td>
                    <td >CAN0 bus</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:57 AM UTC</td>
        </tr>
            <tr>
          <td class="positive">
           Pass</td>
          <td class="form-id ">
          TC 1.13.2</td>
                    <td >CAN1 bus</td>
          <td >Khai Do</td>
          <td >2020-05-13 03:56 AM UTC</td>
        </tr>
          </tbody>
    </table>
    <br/>
    <br/>    <table class="data" id="results-detail">
      <thead>
        <tr>
          <th colspan="5">Results Detail</th>
        </tr>
        <tr>
          <th>Result</th>
          <th>Form ID</th>                <th>Description</th>
                            <th>Expected Results</th>
                      <th>Comments</th>
        </tr>
      </thead>
      <tbody>
                <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.1 - iot_c_utility          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.1.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.1.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.1.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.1.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.1.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/azure-c-shared-utility/iot_c_utility/iot_c_utility</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same attached log at log/Azure-c-shared-utility/iot_c_utility.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.2 - socketio_connect          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.2.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.2.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.2.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.2.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.2.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/azure-c-shared-utility/socketio_connect/socketio_connect</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-c-shared-utility/socketio_connect.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.3 - tlsio_connect          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.3.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.3.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.3.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.3.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.3.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/azure-c-shared-utility/tlsio_connect/tlsio_connect.</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-c-shared-utility/tlsio_connect.log.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.4 - Azure-iot-sdk-c          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.4.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.4.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.4.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.4.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.4.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/azure-iot-sdk-c/iothub_client/iothub_client_sample_mqtt_dm/iothub_client_sample_mqtt_dm</td>
                                <td >Run successfully and you can see the log in the serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_client_sample_mqtt_dm.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.5 - iothub_convenience_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.5.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.5.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.5.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.5.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.5.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_convenience_sample/iothub_convenience_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, This log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_convenience_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.6 - iothub_ll_client_x509_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.6.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.6.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.6.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.6.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.6.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_ll_client_x509_sample/iothub_ll_client_x509_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_ll_client_x509_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.7 - iothub_client_device_twin_and_methods_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.7.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.7.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.7.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.7.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.7.5</td>
                            <td >Run the binary for this sample on the device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_client_device_twin_and_methods_sample/iothub_client_device_twin_and_methods_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_client_device_twin_and_methods_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.8 - iothub_client_sample_upload_to_blob          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.8.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.8.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.8.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.8.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.8.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_client_sample_upload_to_blob/iothub_client_sample_upload_to_blob</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdkc/iothub_client/iothub_client_sample_upload_to_blob.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.9 - iothub_ll_c2d_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.9.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.9.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.9.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.9.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.9.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_ll_c2d_sample/iothub_ll_c2d_sample</td>
                                <td >Run successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.9.6</td>
                            <td >Go to Azure IoT Cloud to send three messages to IoT device under test. You can refer how to sent a message at “1.9.1.8 Send cloud-to-device messages with IoT Hub ” item in this document.</td>
                                <td >Send messages successfully. You can see log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_ll_c2d_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.10 - iothub_ll_telemetry_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.10.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.10.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.10.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.10.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.10.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_ll_telemetry_sample/iothub_ll_telemetry_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_ll_telemetry_sample.log.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.11 - iothub_client_sample_amqp_shared_methods          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.11.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.11.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.11.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.11.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.11.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_client_sample_amqp_shared_methods/iothub_client_sample_amqp_shared_methods</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_client_sample_amqp_shared_methods.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.12 - iothub_client_sample_upload_to_blob_mb          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.12.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.12.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.12.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.12.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.12.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_client_sample_upload_to_blob_mb/iothub_client_sample_upload_to_blob_mb</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_client_sample_upload_to_blob_mb.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.13 - iothub_ll_client_shared_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.13.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.13.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.13.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.13.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.13.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_client/iothub_ll_client_sharedsample/iothub_ll_client_shared_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_client/iothub_ll_client_shared_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.14 - iothub_deviceconfiguration_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.14.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.14.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.14.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.14.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.14.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_serviceclient/iothub_deviceconfiguration_sample/iothub_deviceconfiguration_sample</td>
                                <td >Run successfully and you can see log in serial port terminal.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.15 - iothub_devicemethod_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.15.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.15.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.15.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.15.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.15.5</td>
                            <td >Run simulate device on PC<br />
$ python python-SimulatedDevice/SimulatedDevice.py</td>
                                <td >Run successfully and you can see log in serial port terminal. that it same log/SimulateDevice/SimulateDevice.log</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.15.6</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_service-client/iothub_devicemethod_sample/iothub_devicemethod_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk- c/iothub_service_client/iothub_devicemethod_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.16 - iothub_devicetwin_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.16.1</td>
                            <td >Boot up DUT.</td>
                                <td >DUT boots up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.16.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.16.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.16.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.16.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_service-client/iothub_devicetwin_sample/iothub_devicetwin_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_service-client/iothub_devicetwin_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.17 - iothub_messaging_ll_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.17.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.17.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.17.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.17.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.17.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_service-client/iothub_messaging_ll_sample/iothub_messaging_ll_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_service-client/iothub_messaging_ll_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.18 - iothub_messaging_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.18.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.18.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.18.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.18.4</td>
                            <td >Mount this USB on device<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.18.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_service-client/iothub_messaging_sample/iothub_messaging_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_service-client/iothub_registrym anager_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.19 - iothub_registrymanager_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.19.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.19.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.19.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.19.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.19.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-iot-sdk-c/iothub_service-client/iothub_registrymanager_sample/iothub_registrymanager_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-iot-sdk-c/iothub_service-client/iothub_registrymanager_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.20 - eh_sender_with_sas_token_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.20.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.20.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.20.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.20.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.20.5</td>
                            <td >Run the binary for this sample on device. <br />
$ cd /media/ ; ./binary_sample/ azure-uamqp-c/eh_sender_with_sas_token_sample/eh_sender_with_sas_token_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-uamqp-c/eh_sender_with_sas_token_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.21 - local_client_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.21.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.21.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.21.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.21.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.21.5</td>
                            <td >Run the local-server-binary first.<br />
$ cd /media/ ; ./binary_sample/ azure-uamqp-c/local_server_sample/local_server_sample;</td>
                                <td >Run successfully and you can see log in serial port terminal.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.21.6</td>
                            <td >Run the binary for this sample on device. <br />
$ cd /media/ ; ./binary_sample/ azure-uamqp-c/local_client_sample/local_client_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-uamqp-c/local_client_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.22 - message_receiver_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.22.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.22.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.22.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.22.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.22.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-uamqp-c/message_receiver_sample/message_receiver_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-uamqp-c/message_receiver_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.23 - message_sender_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.23.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.23.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.23.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.23.4</td>
                            <td >Mount this USB on device. <br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.23.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-uamqp-c/message_sender_sample/message_sender_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-uamqp-c/message_sender_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.24 - mssbcbs_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.24.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.24.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.24.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.24.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.24.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-uamqp-c/mssbcbs_sample/mssbcbs_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-uamqp-c/mssbcbs_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.25 - websockets_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.25.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.25.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.25.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.25.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.25.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/ azure-uamqp-c/websockets_sample/websockets_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-uamqp-c/websockets_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.1.26 - mqtt_client_sample          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.26.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.26.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.26.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.26.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.1.26.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sample/azure-umqtt-c/mqtt_client_sample/mqtt_client_sample</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Azure-uamqp-c/mqtt_client_sample.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.2.1 - Docker Testing          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.2.1.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.2.1.2</td>
                            <td >Copy the binary_sample file to USB.</td>
                                <td >The binary file is copied to USB successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.2.1.3</td>
                            <td >Plug-in this USB to DUT.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.2.1.4</td>
                            <td >Mount this USB on device.<br />
$ mount /dev/&lt;sdx&gt; /media/</td>
                                <td >Mount successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.2.1.5</td>
                            <td >Run the binary for this sample on device.<br />
$ cd /media/ ; ./binary_sampleDocker-testing/docker-testing</td>
                                <td >Run successfully and you can see the log in serial port terminal. If it's passed, this log will same the attached log at log/Docker-testing/Dock-testing.log</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.3.1 - General Output Feature          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.1.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.1.2</td>
                            <td >Determine the GPIO controller<br />
- Run command:<br />
$ ls /sys/class/gpio/<br />
Result: export gpiochip384 gpiochip400 gpiochip416 gpiochip432 unexport<br />
$ cat /sys/class/gpio/{gpiochip384,gpiochip400,gpiochip416}/label <br />
Result: 4-0021,4-0020,3-0020</td>
                                <td >Return the result correctly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.1.3</td>
                            <td >Check pin GPIO on IO Expander 0 [gpiochip416-3-0020]<br />
Check pin gpio 2 using this command:<br />
$ cd /sys/class/gpio/<br />
$ echo 418 &gt; export<br />
$ cd gpio418/<br />
Change direction to out and value of gpiochip418:<br />
$ echo out &gt; direction<br />
$ echo 0 &gt; value<br />
$ echo 1 &gt; value</td>
                                <td >Echo to direction and value successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.1.4</td>
                            <td >Measure voltage output of pin gpio 2 using power meter or scope.<br />
The voltage: 0 if set value equal 0 and 3.3V if set value equal 1.</td>
                                <td >The voltage return correctly.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.3.2 - General Input Feature          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.2.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.2.2</td>
                            <td >Determine the GPIO controller - run command:<br />
$ ls /sys/class/gpio/<br />
Result: export gpiochip384 gpiochip400 gpiochip416 gpiochip432 unexport<br />
$ cat /sys/class/gpio/{gpiochip384,gpiochip400,gpiochip416}/label<br />
Result: 4-0021,4-0020,3-0020</td>
                                <td >Return the result correctly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.2.3</td>
                            <td >Check pin GPIO on IO Expander 0 [gpiochip416-3-0020]<br />
Check pin gpio 2 using this command:<br />
$ echo 418 &gt; export<br />
Change direction to out and value of gpiochip418:<br />
$ echo in &gt; direction<br />
Create signal input using voltage 0 or 3.3V go<br />
into pin gpio2.</td>
                                <td >Echo to direction and create signal input successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.2.4</td>
                            <td >Get value from the terminal.<br />
$ cat /sys/class/gpio/gpio418/value.<br />
0 if signal input equals 0 and 1 if signal input equals 3.3V.</td>
                                <td >The value return correctly</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.3.3 - General Interrupt Handler Feature          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.3.1</td>
                            <td >Boot up DUT</td>
                                <td >DUT boots up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.3.2</td>
                            <td >Determine the GPIO controller - run command:<br />
$ ls /sys/class/gpio/<br />
Result: export gpiochip384 gpiochip400 gpiochip416 gpiochip432 unexport<br />
$ cat /sys/class/gpio/{gpiochip384,gpiochip400,gpiochip416}/label<br />
Result: 4-0021,4-0020,3-0020</td>
                                <td >Return the result correctly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.3.3</td>
                            <td >Check pin GPIO on IO Expander 0 [gpiochip416-3-0020]<br />
Check pin gpio2 using this command:<br />
$ echo 418 &gt; export<br />
Change direction to out and value of gpiochip418:<br />
$ echo in &gt; direction<br />
$ echo both &gt; edge</td>
                                <td >Echo to direction and edge successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.3.3.4</td>
                            <td >Create interrupt handler:<br />
Create signal input using voltage 0 or 3.3V go into pin gpio2<br />
Check interrupt by command:<br />
$ cat /proc/interrupts</td>
                                <td >The interrupt CPU0 keembay-gpio will count up successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.4 - RTC          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.4.1</td>
                            <td >Boot up DUT</td>
                                <td >Boot up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.4.2</td>
                            <td >Using hwclock for calling Real Time Clock (RTC), it is a utility for accessing the hardware clock.<br />
$ hwclock --show</td>
                                <td >Return date and time value successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.5 - Audio playback          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.5.1</td>
                            <td >Boot up DUT</td>
                                <td >Boot up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.5.2</td>
                            <td >Plug-in headphone to KMB device</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.5.3</td>
                            <td >In serial port terminal, Run command:<br />
$ amixer sset -q 'PCM' 127<br />
$ amixer sset -q 'HP DAC' 118<br />
$ amixer sset -q 'HP' 9<br />
$ amixer sset -q 'Left HP Mixer DACL1' on<br />
$ amixer sset -q 'Left HP Mixer DACR1' on<br />
$ amixer set 'Left HP Mixer Line2L Bypass' 'off'<br />
$ amixer set 'Left HP Mixer Line2R Bypass' 'off'<br />
$ amixer set 'Left HP Mixer PGAL Bypass' 'off'<br />
$ amixer set 'Left HP Mixer PGAR Bypass' 'off'<br />
$ amixer sset -q 'Left DAC Mux' 'DAC_L1'<br />
$ amixer sset -q 'Right HP Mixer DACR1'  on<br />
$ amixer sset -q 'Right HP Mixer DACL1' on<br />
$ amixer set 'Right HP Mixer Line2L Bypass' 'off'<br />
$ amixer set 'Right HP Mixer Line2R Bypass' 'off'<br />
$ amixer set 'Right HP Mixer PGAL Bypass' 'off'<br />
$ amixer set 'Right HP Mixer PGAR Bypass' 'off'<br />
$ amixer sset -q  'Right DAC Mux' 'DAC_R1'</td>
                                <td >Run successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.5.4</td>
                            <td >Copy an audio file to DUT (Ex: 16kHz.wav)</td>
                                <td >The audio file is copied to the DUT.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.5.5</td>
                            <td >In serial port terminal.<br />
$ aplay 16kHz.wav</td>
                                <td >You can hear audio in headphone.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.6 - Audio record          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.6.1</td>
                            <td >boot up DUT</td>
                                <td >Boot up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.6.2</td>
                            <td >Plug-in the microphone to mic-in connector on KMB device</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.6.3</td>
                            <td >In serial port terminal, run below command on yocto for alsamixer setup:<br />
$ amixer cset name='Left PGA Mixer Line1L Switch' off<br />
$ amixer cset name='Left PGA Mixer Line1R Switch' off<br />
$ amixer cset name='Left PGA Mixer Line2L Switch' off<br />
$ amixer cset name='Left PGA Mixer Mic3L Switch' on<br />
$ amixer cset name='Left PGA Mixer Mic3R Switch' off<br />
$ amixer cset name='Right PGA Mixer Line1L Switch' off<br />
$ amixer cset name='Right PGA Mixer Line1R Switch' off<br />
$ amixer cset name='Right PGA Mixer Line2R Switch' off<br />
$ amixer cset name='Right PGA Mixer Mic3L Switch' off<br />
$ amixer cset name='Right PGA Mixer Mic3R Switch' on</td>
                                <td >Run successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.6.4</td>
                            <td >$ run pipeline (sound source need to be put closely to microphone)<br />
gst-launch-1.0 alsasrc num-buffers=2000 device=hw:0,0 ! audio/x-raw,channels=2,rate=48000,format=S16LE ! audioconvert ! audioresample ! wavenc ! filesink location=mic.wav</td>
                                <td >Run successfully and receive a mic.wav file.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.6.5</td>
                            <td >Play this recording</td>
                                <td >Make sure the sounds can be playback.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.7.1 - Camera port 1          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.1.1</td>
                            <td >Boot up DUT</td>
                                <td >Boot up and login properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.1.3</td>
                            <td >Install the camera drivers and VAAPI encode driver<br />
- Run command:<br />
$ modprobe kmb_flash<br />
$ modprobe kmb_lens<br />
$ modprobe kmb_cam<br />
$ modprobe kmb-imx334<br />
$ modprobe hantrodriver</td>
                                <td >All modules are probed successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.1.4</td>
                            <td >Check /dev folder.<br />
- Run command:<br />
$ ls -l /dev/video*</td>
                                <td >Have eight video files in the /dev folder, named from video0 to video7.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.1.5</td>
                            <td >Start VPU on the UART console<br />
- Run command:<br />
$ echo -e &quot;3&quot; | XLinkStartStop; StartVpu vpu_ipc.bin</td>
                                <td >Loading VPU firmware file successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.1.6</td>
                            <td >Run camera via IPS pipeline<br />
- Run command:<br />
$ cd ~/<br />
$ gst-launch-1.0 kmbcamsrc name=kmbsrc num-frames=10 transform-hub=basic kmbsrc. ! queue ! filesink location=ull_2_sensorInput_video0_3840x2160.nv12 kmbsrc. ! queue ! capsfilter caps=video/x-raw,width=1920,height=1080 ! filesink location=ull_2_sensorInput_video1_1920x1080.nv12</td>
                                <td >Have 2 files: ull_2_sensorInput_video0_3840x2160.nv12 and ull_2_sensorInput_video1_1920x1080.nv12 that it has value.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.1.7</td>
                            <td >Check output files camera<br />
	- Copy 2 files ull_2_sensorInput_video0_3840x2160.nv12 and ull_2_sensorInput_video1_1920x1080.nv12 to the computer. <br />
	- Using vooya player to open them.</td>
                                <td >2 files can open.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.7.2 - Camera port 2          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.2.1</td>
                            <td >Boot up DUT</td>
                                <td >boot up and login properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.2.3</td>
                            <td >Install the camera drivers and VAAPI encode driver<br />
- Run command:<br />
$ modprobe kmb_flash<br />
$ modprobe kmb_lens<br />
$ modprobe kmb_cam<br />
$ modprobe kmb-imx334<br />
$ modprobe hantrodriver</td>
                                <td >All modules are probed successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.2.4</td>
                            <td >Check /dev folder<br />
- Run command:<br />
$ ls -l /dev/video*</td>
                                <td >Have eight video files in the /dev folder, named from video0 to video7</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.2.5</td>
                            <td >Start VPU on the UART console<br />
- Run command:<br />
$ echo -e &quot;3&quot; | XLinkStartStop; StartVpu vpu_ipc.bin</td>
                                <td >$ Loading VPU firmware file successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.2.6</td>
                            <td >Run camera via IPS pipeline<br />
- Run command:<br />
$ cd ~/<br />
$ gst-launch-1.0 kmbcamsrc name=kmbsrc num-frames=10 transform-hub=basic kmbsrc. ! queue ! filesink location=ull_2_sensorInput_video0_3840x2160.nv12 kmbsrc. ! queue ! capsfilter caps=video/x-raw,width=1920,height=1080 ! filesink location=ull_2_sensorInput_video1_1920x1080.nv12</td>
                                <td >Have 2 files: ull_2_sensorInput_video0_3840x2160.nv12 and ull_2_sensorInput_video1_1920x1080.nv12 that it has value.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.2.7</td>
                            <td >Check output files camera<br />
	- Copy 2 files ull_2_sensorInput_video0_3840x2160.nv12 and ull_2_sensorInput_video1_1920x1080.nv12 to Computer. <br />
	- Using vooya player to open them.</td>
                                <td >2 files can open sucessfully</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.7.3 - Camera port 3          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.3.1</td>
                            <td >Boot up DUT</td>
                                <td >Boot up and login properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.3.3</td>
                            <td >Install the camera drivers and VAAPI encode driver<br />
- Run command:<br />
$ modprobe kmb_flash<br />
$ modprobe kmb_lens<br />
$ modprobe kmb_cam<br />
$ modprobe kmb-ov9282<br />
$ modprobe hantrodriver</td>
                                <td >All modules are probed successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.3.4</td>
                            <td >Check /dev folder<br />
- Run command:<br />
$ ls -l /dev/video*</td>
                                <td >Have nine video files in the /dev folder, named from video0 to video8</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.3.5</td>
                            <td >Start VPU on the UART console<br />
- Run command:<br />
$ echo -e &quot;3&quot; | XLinkStartStop; StartVpu vpu_ipc.bin</td>
                                <td >Loading VPU firmware file successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.3.6</td>
                            <td >Run camera via IPS pipeline<br />
- Run command:<br />
$ cd ~/<br />
$ gst-launch-1.0 kmbcamsrc name=kmbsrc num-frames=10 transform-hub=basic kmbsrc. ! queue ! filesink location=ull_2_sensorInput_video0_1280x720.nv12 kmbsrc. ! queue ! capsfilter caps=video/x-raw,width=800,height=600 ! filesink location=ull_2_sensorInput_video1_800x600.nv12</td>
                                <td >Have 2 files: ull_2_sensorInput_video0_1280x720.nv12 and ull_2_sensorInput_video1_800x600.nv12 that it has value.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.7.3.7</td>
                            <td  deletedForm>Check output files camera<br />
	- Copy 2 files ull_2_sensorInput_video0_1280x720.nv12 and ull_2_sensorInput_video1_800x600.nv12 to Computer. <br />
	- Using vooya player to open them.</td>
                                <td  deletedForm>2 files can open.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.7.4 - Camera port 4          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.4.1</td>
                            <td >Boot up DUT</td>
                                <td >boot up and login properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.4.3</td>
                            <td >Install the camera drivers and VAAPI encode driver<br />
- Run command:<br />
$ modprobe kmb_flash<br />
$ modprobe kmb_lens<br />
$ modprobe kmb_cam<br />
$ modprobe kmb-ov9282<br />
$ modprobe hantrodriver</td>
                                <td >All modules are probed successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.4.4</td>
                            <td >Check /dev folder<br />
- Run command:<br />
$ ls -l /dev/video*</td>
                                <td >Have nine video files in the /dev folder, named from video0 to video8</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.4.5</td>
                            <td >Start VPU on the UART console<br />
- Run command:<br />
$ echo -e &quot;3&quot; | XLinkStartStop; StartVpu vpu_ipc.bin</td>
                                <td >Loading VPU firmware file successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.4.6</td>
                            <td >Run camera via IPS pipeline<br />
- Run command:<br />
$ cd ~/<br />
$ gst-launch-1.0 kmbcamsrc name=kmbsrc num-frames=10 transform-hub=basic kmbsrc. ! queue ! filesink location=ull_2_sensorInput_video0_1280x720.nv12 kmbsrc. ! queue ! capsfilter caps=video/x-raw,width=800,height=600 ! filesink location=ull_2_sensorInput_video1_800x600.nv12</td>
                                <td >Have 2 files: ull_2_sensorInput_video0_1280x720.nv12 and ull_2_sensorInput_video1_800x600.nv12 that it has value.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.7.4.7</td>
                            <td >Check output files camera<br />
	- Copy 2 files ull_2_sensorInput_video0_1280x720.nv12 and ull_2_sensorInput_video1_800x600.nv12 to Computer. <br />
	- Using vooya player to open them.</td>
                                <td >2 files can open</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.8 - Ethernet port 1 - SOC ethernet          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.8.1</td>
                            <td >Boot up DUT</td>
                                <td >Boot up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.8.2</td>
                            <td >Plug-in ethernet wire to port 1 of the device.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.8.3</td>
                            <td >Run command:<br />
$ ifconfig -a</td>
                                <td >Eth0 show up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.8.5</td>
                            <td >Ping to google by run command:<br />
$ ping google.com</td>
                                <td >Ping successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.9 - HDMI Flash Firmware Tool          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.9.1</td>
                            <td >Boot up DUT</td>
                                <td >Boot up DUT properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.9.2</td>
                            <td >On PC, convert Hex file to binary file:<br />
- Run command: <br />
$ xxd -r -p input.hex output.bin</td>
                                <td >Convert file successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.9.3</td>
                            <td >Copy binary file from PC to device.<br />
Move binary file to USB or Sdcard and plug-in to device. <br />
Run command on device to mount USB: <br />
$ mount /dev/sd[x] /media/ <br />
or sdcard: <br />
$ mount /dev/mmcblk0 /media/<br />
And copy binary file to device: cp /media/&lt;binaryfile.bin&gt; .</td>
                                <td >Copy binary file to device successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.9.4</td>
                            <td >Run command to flash firmware for HDMI chip.<br />
$ python-flashfirmware.py [i2c_bus] [i2c_addr] [namefile.bin]<br />
Ex: <br />
HDMI port 1: i2c2 address 0x2b<br />
$ python-flashfirmware.py 2 0x2b LT9611UXC_1Port_DSI_4Lane.bin<br />
HDMI port 2: i2c1 address 0x2b<br />
$ python-flashfirmware.py 1 0x2b LT9611UXC_1Port_DSI_2Lane.bin<br />
HDMI port 3: i2c1 address 0x2f<br />
$ python-flashfirmware.py 1 0x2f LT9611UXC_1Port_DSI_2Lane.bin</td>
                                <td >Run command successfully and get a log: &quot;Flash success&quot; on terminal.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail deletedForm">
            TC 1.10.1 - SATA interface port 1          </th>
        </tr>        <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.1.1</td>
                            <td  deletedForm>Plug-in SATA hard drive to SATA port 1 on DUT via SATA cable</td>
                                <td  deletedForm>Plug-in successfully</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.1.2</td>
                            <td  deletedForm>Boot-up DUT</td>
                                <td  deletedForm>Boot up properly</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.1.3</td>
                            <td  deletedForm>In serial port terminal, run below command to get SATA's name: <br />
$ lsblk</td>
                                <td  deletedForm>Run successfully. You can see a device name, which is match your SATA size.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.1.4</td>
                            <td  deletedForm>Mount SATA hard drive. In serial port terminal, run below command to mount SATA hard drive:<br />
$ mount /dev/&lt;your SATA's name&gt; /media/<br />
Ex: mount /dev/sda /media/</td>
                                <td  deletedForm>Mount SATA device successfully.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail deletedForm">
            TC 1.10.1 - SATA interface port 2          </th>
        </tr>        <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.1.1</td>
                            <td  deletedForm>Plug-in SATA hard drive to SATA port 2 on DUT via SATA cable</td>
                                <td  deletedForm>Plug-in successfully</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.1.2</td>
                            <td  deletedForm>Boot-up DUT.</td>
                                <td  deletedForm>Boot up properly.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.1.3</td>
                            <td  deletedForm>In serial port terminal, run below command to get SATA's name<br />
$ lsblk</td>
                                <td  deletedForm>Run successfully. You can see a device name, which is match your SATA size.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.1.4</td>
                            <td  deletedForm>Mount SATA hard drive. In serial port terminal, run below command to mount SATA hard drive<br />
$ mount /dev/&lt;your SATA's name&gt; /media/<br />
Ex: mount /dev/sda /media/</td>
                                <td  deletedForm>Mount SATA device successfully.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail deletedForm">
            TC 1.10.3 - SATA interface port 3          </th>
        </tr>        <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.3.1</td>
                            <td  deletedForm>Plug-in SATA hard drive to SATA port 3 on DUT via SATA cable</td>
                                <td  deletedForm>Plug-in successfully</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.3.2</td>
                            <td  deletedForm>Boot-up DUT</td>
                                <td  deletedForm>Boot up properly.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.3.3</td>
                            <td  deletedForm>In serial port terminal, run below command to get SATA's name:<br />
$ lsblk</td>
                                <td  deletedForm>Run successfully. You can see a device name, which is match your SATA size.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.3.4</td>
                            <td  deletedForm>Mount SATA hard drive. In serial port terminal, run below command on yocto to mount SATA hard drive:<br />
$ mount /dev/&lt;your SATA's name&gt; /media/<br />
Ex: mount /dev/sda /media/</td>
                                <td  deletedForm>Mount SATA device successfully.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail deletedForm">
            TC 1.10.3 - SATA interface port 4          </th>
        </tr>        <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.3.1</td>
                            <td  deletedForm>Plug-in SATA hard drive to SATA port 4 on DUT via SATA cable</td>
                                <td  deletedForm>Plug-in successfully</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.3.2</td>
                            <td  deletedForm>Boot-up DUT</td>
                                <td  deletedForm>Boot up properly</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.3.3</td>
                            <td  deletedForm>In serial port terminal, run below command on yocto to get SATA's name:<br />
$ lsblk</td>
                                <td  deletedForm>Run successfully. You can see a device name, which is match your SATA size.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="result-1">
          <td class="positive deletedForm">
            Pass</td>
          <td class="form-id  deletedForm">TS 1.10.3.4</td>
                            <td  deletedForm>Mount SATA hard drive. In serial port terminal, run below command to mount SATA hard drive:<br />
$ mount /dev/&lt;your SATA's name&gt; /media/<br />
Ex: mount /dev/sda /media/</td>
                                <td  deletedForm>Mount SATA device successfully.</td>
                        <td  deletedForm>      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.12 - Ethernet port 2 - PCIe ethernet          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.12.1</td>
                            <td >Boot up DUT.</td>
                                <td >Boot up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.12.2</td>
                            <td >Plug-in ethernet wire to port 2 of device.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.12.3</td>
                            <td >Run command: <br />
$ ifconfig -a</td>
                                <td >Eth1 show up properly.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.12.5</td>
                            <td >Ping to google by run command:<br />
$ ping google.com</td>
                                <td >Ping successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.13.1 - CAN0 bus          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.1</td>
                            <td >Plug-in PCAN-USB-FD Adaptor to PC.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.2</td>
                            <td >Download and install driver for PCAN-USB-FD Adaptor at link: https://www.peak-system.com/fileadmin/media/linux/files/peak-linux-driver-8.10.0.tar.gz</td>
                                <td >Install successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.3</td>
                            <td >In PC's terminal, run below command to install can-utils test tool <br />
$ sudo apt-get install can-utils</td>
                                <td >Install successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.4</td>
                            <td >Boot up DUT</td>
                                <td >Boot up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.5</td>
                            <td >Connect PCAN-USB-FD Adaptor to CAN0 on KMB device:<br />
- Connect PCAN-USB-FD Adaptor CAN-H pin (pin 7) to KMB's CAN0 CAN-H pin (pin 7 at header CN4201).<br />
- Connect PCAN-USB-FD Adaptor CAN-L pin (pin 2) to KMB's CAN0 CAN-L pin (pin 2 at header CN4201).</td>
                                <td >Connect successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.6</td>
                            <td >In KMB's terminal, run below command to start CAN0 bus<br />
$ canconfig can0 bitrate 800000 start</td>
                                <td >Start successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.7</td>
                            <td >In PC's terminal, run below command to start PCAN-USB-FD bus<br />
$ sudo ip link set can0 type can bitrate 800000<br />
$ sudo ifconfig can0 up</td>
                                <td >Start successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.8</td>
                            <td >In KMB's terminal, run below command to show received data at CAN0<br />
$ candump can0</td>
                                <td >Run successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.9</td>
                            <td >In PC's terminal, run below command to send data to KMB's CAN0<br />
$ cansend can0 123#AABBCCDD</td>
                                <td >Run successfully and see received data on KMB's terminal. It same below log.<br />
$ &lt;0x123&gt; [4] aa bb cc dd</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.10</td>
                            <td >In PC's terminal, run below command to show received data from KMB's CAN0<br />
$ candump can0</td>
                                <td >Run successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.1.11</td>
                            <td >In KMB's terminal, run below command to send data to PC's PCAN-USB-FD bus<br />
$ cansend can0 -i 0x123 0xAA 0xBB 0xCC 0xDD</td>
                                <td >Run successfully and see received data on PC's terminal. It same below log.<br />
$ can0  123   [4]  AA BB CC DD</td>
                        <td >      </td>
    </tr>
            <tr class="filter-hidden">
          <th colspan="5" class="detail ">
            TC 1.13.2 - CAN1 bus          </th>
        </tr>        <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.1</td>
                            <td >Plug-in PCAN-USB-FD Adaptor to PC.</td>
                                <td >Plug-in successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.2</td>
                            <td >Download and install driver for PCAN-USB-FD Adaptor at link: https://www.peak-system.com/fileadmin/media/linux/files/peak-linux-driver-8.10.0.tar.gz</td>
                                <td >Install successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.3</td>
                            <td >In PC's terminal, run below command to install can-utils test tool:<br />
$ sudo apt-get install can-utils</td>
                                <td >Install successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.4</td>
                            <td >Boot up DUT</td>
                                <td >Boot up properly</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.5</td>
                            <td >Connect PCAN-USB-FD Adaptor to CAN1 on KMB device:<br />
- Connect PCAN-USB-FD CAN-H pin (pin 7) to KMB's CAN1 CAN-H pin (pin 7 at header CN4202).<br />
- Connect PCAN-USB-FD CAN-L pin (pin 2) to KMB's CAN1 CAN-L pin (pin 2 at header CN4202).</td>
                                <td >Connect successfully.</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.6</td>
                            <td >In KMB's terminal, run below command to start CAN1 bus<br />
$ canconfig can1 bitrate 800000 start</td>
                                <td >Start successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.7</td>
                            <td >In PC's terminal, run below command to start PCAN-USB-FD bus<br />
$ sudo ip link set can0 type can bitrate 800000<br />
$ sudo ifconfig can0 up</td>
                                <td >Start successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.8</td>
                            <td >In KMB's terminal, run below command to show received data at CAN1<br />
$ candump can1</td>
                                <td >Run successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.9</td>
                            <td >In PC's terminal, run below command to send data to KMB's CAN1<br />
$ cansend can0 123#AABBCCDD</td>
                                <td >Run successfully and see received data on KMB's terminal. It same below log.<br />
$ &lt;0x123&gt; [4] aa bb cc dd</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.10</td>
                            <td >In PC's terminal, run below command to show received data from KMB's CAN1<br />
$ candump can0</td>
                                <td >Run successfully</td>
                        <td >      </td>
    </tr>
            <tr class="result-1">
          <td class="positive">
            Pass</td>
          <td class="form-id ">TS 1.13.2.11</td>
                            <td >In KMB's terminal, run below command to send data to PC's PCAN-USB-FD Adaptor<br />
$ cansend can1 -i 0x123 0xAA 0xBB 0xCC 0xDD</td>
                                <td >Run successfully and see received data on PC's terminal. It same below log.<br />
$ can0  123   [4]  AA BB CC DD</td>
                        <td >      </td>
    </tr>
    </tbody>
    </table>
    </div>
      </body>
</html>